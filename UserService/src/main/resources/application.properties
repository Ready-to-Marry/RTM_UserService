# Server port
server.port = ${SERVER_PORT:8081}

# PostgreSQL DataSource connect
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JPA - Hibernate
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Redis connect
spring.data.redis.timeout=${SPRING_DATA_REDIS_TIMEOUT:2000ms}
spring.data.redis.sentinel.master=${SPRING_DATA_REDIS_SENTINEL_MASTER}
spring.data.redis.sentinel.nodes=${SPRING_DATA_REDIS_SENTINEL_NODES}
spring.data.redis.sentinel.password=${SPRING_DATA_REDIS_SENTINEL_PASSWORD}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD}

# /actuator/health
management.endpoints.web.exposure.include=health

# Eureka
spring.application.name=user-service
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
eureka.client.register-with-eureka=${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
eureka.client.fetch-registry=${EUREKA_CLIENT_FETCH_REGISTRY}
eureka.instance.prefer-ip-address=${EUREKA_INSTANCE_PREFER_IP_ADDRESS}

# S3 & DynamoDB connect
cloud.aws.s3.bucket=${AWS_S3_BUCKET_NAME}
cloud.aws.dynamodb.table-name=${AWS_DYNAMODB_TABLE_NAME}
cloud.aws.region.static-region=${AWS_REGION}
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}

# app.url.base: URL
app.url-base=${APP_URL_BASE}

# Invite Code
invite-code.ttl=${INVITE_CODE_TTL:10m}

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer